----------------select
select*from staff_login
select*from UserServices
SELECT COUNT(*) AS Total FROM members
UPDATE UserServices
SET StatusSer = 1
WHERE UserServiceID = 2;
SELECT us.UserServiceID, us.memberID, us.ServiceID, s.ServiceName, 
			us.Daystart, us.Dayend, us.StatusSer 
			FROM UserServices us 
			JOIN Services s ON us.ServiceID = s.ServiceID 
UPDATE UserServices
SET StatusSer = 1 
WHERE UserServiceID = 6;
select * from UserServices
SELECT COALESCE(SUM(s.Price), 0) AS Total FROM UserServices us 
				JOIN Services s ON us.ServiceID = s.ServiceID 
				WHERE us.memberID = 1 AND us.StatusSer = 0


SELECT COALESCE(SUM(s.Price), 0) AS Total FROM UserServices us 
				JOIN Services s ON us.ServiceID = s.ServiceID 
				WHERE us.memberID = 2 AND us.StatusSer = 0


SELECT us.UserServiceID, us.memberID, us.ServiceID, s.ServiceName, 
			us.Daystart, us.Dayend, us.StatusSer 
			FROM UserServices us 
			JOIN Services s ON us.ServiceID = s.ServiceID 
go
SELECT 
    f.FeedbackID,
    f.memberID,
    f.namefb,
    f.feedbackTittle,
    f.note,
    f.FeedbackDate,
    f.Statusfb,
    fi.ImageID,
    fi.ImagePath
FROM Feedback f
LEFT JOIN FeedbackImages fi ON f.FeedbackID = fi.FeedbackID; 
SELECT * FROM members WHERE memberID = 2
select *from Login
select*from services
SELECT*FROM members
SELECT *FROM Login l
JOIN members m ON l.memberID = m.memberID;
go
       SELECT 
    a.ApartmentID, 
    b.BuildingName, 
    f.FloorNumber, 
    a.ApartmentNumber, 
    a.ApartmentType, 
    a.Area, 
    CASE 
        WHEN a.Apartments_Status = 1 THEN N'Đang ở' 
        WHEN a.Apartments_Status = 2 THEN N'Trống'
        WHEN a.Apartments_Status = 3 THEN N'Đang sửa chữa'
        ELSE N'Không xác định' 
    END AS ApartmentStatus
FROM Apartments a
LEFT JOIN floor f ON a.FloorID = f.FloorID
LEFT JOIN Building b ON a.BuildingID = b.BuildingID;
SELECT * FROM Feedback WHERE 1=1
SELECT COUNT(*) AS Total FROM Login where jobRole='user'and loginStatus =1
SELECT 
    m.memberID, 
    m.memberName, 
    a.ApartmentID,  -- Thêm Mã phòng
    a.ApartmentNumber, 
    f.FloorNumber, 
    b.BuildingName
FROM members m
LEFT JOIN Apartments a ON m.apartmentID = a.ApartmentID
LEFT JOIN floor f ON a.FloorID = f.FloorID
LEFT JOIN Building b ON a.BuildingID = b.BuildingID;

SELECT 
    m.memberID, 
    m.memberName, 
    a.ApartmentID,   -- Mã phòng
    a.ApartmentNumber,  -- Số phòng
    f.FloorNumber,   -- Số lầu
    b.BuildingName   -- Tên tòa nhà
FROM members m
JOIN Apartments a ON m.apartmentID = a.ApartmentID
JOIN floor f ON a.FloorID = f.FloorID
JOIN Building b ON a.BuildingID = b.BuildingID
WHERE a.ApartmentID = 1;  -- Điều kiện lọc theo Mã phòng

SELECT * 
FROM members m
JOIN Login l ON m.memberID = l.memberID
WHERE l.loginStatus = 1;
select *from Apartments
SELECT *FROM members m JOIN Login l ON m.memberID = l.memberID WHERE l.loginStatus = 1

DELETE FROM members WHERE memberID = 4;
SELECT * FROM members WHERE apartmentID = 1 AND memberStatus = 1
SELECT 
    a.ApartmentID, 
    a.ApartmentNumber, 
    a.ApartmentType, 
    a.Area, 
    a.Apartments_Status, 
    f.FloorID, 
    f.FloorNumber, 
    f.FloorName, 
    f.TotalApartments, 
    f.FloorStatus, 
    b.BuildingID, 
    b.BuildingName, 
    b.TotalFloors, 
    b.BuildingStatus, 
    m.memberID, 
    m.memberName, 
    m.avatar, 
    m.country, 
    m.dob,  
    m.StartDate,  
    m.EndDate,  
    m.quantity, 
    m.Phone, 
    m.cccd, 
    m.verifyCode,  
    m.gender, 
    m.memberStatus, 
    m.identityImage
FROM Apartments a
LEFT JOIN floor f ON a.FloorID = f.FloorID
LEFT JOIN Building b ON a.BuildingID = b.BuildingID
LEFT JOIN members m ON a.ApartmentID = m.apartmentID
WHERE a.ApartmentID = 1;
SELECT memberID, memberName, avatar, country, dob, StartDate, EndDate, 
				quantity, Phone, cccd, verifyCode, gender, apartmentID, memberStatus, identityImage 
				FROM members WHERE apartmentID = 1
SELECT s.ServiceName, s.Price FROM UserServices us 
				JOIN Services s ON us.ServiceID = s.ServiceID 
				WHERE us.memberID = 2 AND us.StatusSer = 0
				go

select *from Invoices
select*from InvoiceDetails
select *from UserServices
select *from Services
select *from members
SELECT * 
FROM Invoices 
WHERE PaymentStatus = 1 AND memberID = 2;
SELECT 
    i.InvoiceID,
    i.MemberID,
    i.InvoiceDate,
    i.TotalAmount,
    i.PaymentStatus,
    d.ServiceName,
    d.Price,
    d.Quantity,
    (d.Price * d.Quantity) AS SubTotal
FROM Invoices i
JOIN InvoiceDetails d ON i.InvoiceID = d.InvoiceID
WHERE i.InvoiceID = 3;
select*from UserServices

-- Nhân viên 3 (Phạm Văn E) phụ trách dịch vụ 3
SELECT s.StaffID, s.StaffName, us.UserServiceID, sv.ServiceName,ss.AssignmentDate
FROM StaffServices ss
JOIN staff s ON ss.StaffID = s.StaffID
JOIN UserServices us ON ss.UserServiceID = us.UserServiceID
JOIN Services sv ON us.ServiceID = sv.ServiceID;

SELECT * FROM StaffServices

SELECT us.UserServiceID, us.memberID, us.ServiceID, s.ServiceName,
       us.Daystart, us.Dayend, us.StatusSer
FROM UserServices us
JOIN Services s ON us.ServiceID = s.ServiceID
WHERE us.StatusSer = 1 AND s.DurationDays = 1;

SELECT us.UserServiceID, us.memberID, us.ServiceID, s.ServiceName,
       us.Daystart, us.Dayend, us.StatusSer
FROM UserServices us
JOIN Services s ON us.ServiceID = s.ServiceID
WHERE us.StatusSer = 1 ;
SELECT
	ss.StaffServiceID,
    a.ApartmentNumber,   
    m.memberName,        
    m.Phone,
    s.ServiceName,       
    b.BuildingName,
    ss.StatusDone  -- Thêm cột StatusDone
FROM 
    StaffServices ss
JOIN 
    UserServices us ON ss.UserServiceID = us.UserServiceID
JOIN 
    Services s ON us.ServiceID = s.ServiceID
JOIN 
    members m ON us.memberID = m.memberID
JOIN 
    Apartments a ON m.apartmentID = a.ApartmentID  
JOIN 
    Building b ON a.BuildingID = b.BuildingID
WHERE 
    ss.StaffID = 1